******************************************************************
* Collect IIS Logs using XML Config File                         *
*  ${systemroot}\System32\inetsrv\config\applicationHost.config  * 
* Note: Powershell Get-Website could also be used:               *
*  "(Get-Website * | % { $_.logFile.Directory})"                 *
******************************************************************
Set:CopyPath=part
ACQ:IIS
SAY:[+] Extracting IIS Logs Directory from IIS XML Config... 
CPY:${systemroot}\System32\inetsrv\config\applicationHost.config &Acq
ACQ:config
***********************************************************
* Look for Basic Locations - In case old Logs exist       *
***********************************************************
SAY:[+] Identifying Common IIS Log Locations... 
OPN:&Acq\DirOutput.txt
CKY:${systemroot}\System32\LogFiles
 OUT:${systemroot}\System32\LogFiles
END:
CKY:${systemdrive}\Windows.old\Windows\System32\LogFiles
 OUT:${systemdrive}\Windows.old\Windows\System32\LogFiles
END:
CKY:${systemdrive}\inetpub\logs\LogFiles
 OUT:${systemdrive}\inetpub\logs\LogFiles
END:
***********************************************************
* Powershell XML Parser to parse IIS Config               *
***********************************************************
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/log/centralBinaryLogFile' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/log/centralW3CLogFile' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/sites/site/logFile' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/sites/siteDefaults/logFile' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/sites/siteDefaults/traceFailedRequestsLogging' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
******************************************************
* Use Echo Command to force expansion of Env Vars     *
*******************************************************
LST:&Acn\IIS\config\DirOutput.txt
SYS:cmd /c echo &LST --exestdout=&Acn\IIS\config\DirXPandOutput.txt
*******************************************************
* Lets Filter on ourself to delete possible Duplicates*
*******************************************************
OPN:&Acn\IIS\config\IISLogDirs.txt
FLT:&Acn\IIS\config\IISLogDirs.txt
SET:FILTER=excl, full
LST:&Acn\IIS\config\DirXPandOutput.txt
OUT:&LST
*******************************************************
* Remove Filter                                       *
*******************************************************
FLT:NONE
LST:&Acn\IIS\config\IISLogDirs.txt
SAY:[+] Now Copying IIS Logs...
ACQ:\IIS\Logs
*******************************************************
* Set CopyPath to full - We may have Los all over     *
*******************************************************
Set:CopyPath=full
CPY:&LST\**\* &Acq
