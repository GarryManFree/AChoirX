******************************************************************
* Collect IIS Logs using XML Config File                         *
*  ${systemroot}\System32\inetsrv\config\applicationHost.config  * 
* Note: Powershell Get-Website could also be used:               *
*  "(Get-Website * | % { $_.logFile.Directory})"                 *
******************************************************************
Set:CopyPath=part
SAY:[+] Collecting Master File Tables...
ACQ:\RawData
DSK:Fixed
EXE:\TSK\fcat.exe -f ntfs $MFT \\.\&dsk: --exestdout=&acn\RawData\MFT-&Dsk
SAY:[+] Extracting IIS Logs Directory from IIS XML Config... 
ACQ:\IIS
CPY:${systemroot}\System32\inetsrv\config\applicationHost.config &Acq
ACQ:config
***********************************************************
* Look for Basic Locations - In case old Logs exist       *
***********************************************************
SAY:[+] Identifying Common IIS Log Locations... 
OPN:&Acq\DirOutput.txt
CKY:${systemroot}\System32\LogFiles
 OUT:${systemroot}\System32\LogFiles
END:
CKY:${systemdrive}\Windows.old\Windows\System32\LogFiles
 OUT:${systemdrive}\Windows.old\Windows\System32\LogFiles
END:
CKY:${systemdrive}\inetpub\logs\LogFiles
 OUT:${systemdrive}\inetpub\logs\LogFiles
END:
***********************************************************
* Powershell XML Parser to parse IIS Config               *
***********************************************************
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/log/centralBinaryLogFile' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/log/centralW3CLogFile' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/sites/site/logFile' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/sites/siteDefaults/logFile' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
SYS:Powershell "Select-Xml -Path &Acq\applicationHost.config -XPath '/configuration/system.applicationHost/sites/siteDefaults/traceFailedRequestsLogging' | ForEach-Object { $_.Node.directory } | Add-Content -Path '&Acq\DirOutput.txt'"
*******************************************************
* Use Echo Command to force expansion of Env Vars     *
*******************************************************
LST:&Acn\IIS\config\DirOutput.txt
SYS:cmd /c echo &LST --exestdout=&Acn\IIS\config\DirXPandOutput.txt
********************************************************
* Lets Filter on ourself to delete possible Duplicates *
********************************************************
OPN:&Acn\IIS\config\IISLogDirs.txt
FLT:&Acn\IIS\config\IISLogDirs.txt
SET:FILTER=excl, full
LST:&Acn\IIS\config\DirXPandOutput.txt
OUT:&LST
*******************************************************
* Zip it all up...                                    *
*******************************************************
FLT:AChIIS.Flt
SET:FILTER=excl, part
SAY:[+] Now Zipping IIS Logs...
SET:ZipFileName=&Dir\&Acn\IISLogs.zip
SET:ZipFileRoot=MFT
FOR:&Dir\&Acn\RawData\*
ZIP:&For
SET:ZipFileRoot=config
FOR:&Dir\&Acn\IIS\config\*
ZIP:&For
SET:ZipFileRoot=IISLogs
LST:&Acn\IIS\config\IISLogDirs.txt
FOR:&LST\**\*
ZIP:&For
ZIP:&Dir\Logs\&Acn.log
SET:ZipFileName=close
CLN:&Acn\Cache
CLN:&Acn\IIS
CLN:&Acn\RawData
CLN:&Acn\RanProg
SAY:[+] IIS Log Collection Complete...
